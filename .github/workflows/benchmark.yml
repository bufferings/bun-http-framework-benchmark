name: Benchmark

on:
    workflow_dispatch:
        inputs:
            time:
                description: 'Benchmark duration in seconds'
                required: false
                default: '10'
                type: string
            connections:
                description: 'Number of concurrent connections'
                required: false
                default: '128'
                type: string
            runs:
                description: 'Number of runs per benchmark (median)'
                required: false
                default: '1'
                type: string

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    benchmark:
        name: Run All Benchmarks
        runs-on: ubuntu-latest
        timeout-minutes: 60
        steps:
            - uses: actions/checkout@v4

            - name: Setup Bun
              id: bun-setup
              uses: oven-sh/setup-bun@v2
              with:
                  bun-version: latest

            - name: Get Bun version
              id: bun-version
              run: echo "bun-version=$(bun --version)" >> $GITHUB_OUTPUT

            - name: Setup Deno
              id: deno-setup
              uses: denoland/setup-deno@v2
              with:
                  deno-version: v2.x

            - name: Get Deno version
              id: deno-version
              run: echo "deno-version=$(deno --version | head -n 1 | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT

            - name: Setup Node.js
              id: node-setup
              uses: actions/setup-node@v4
              with:
                  node-version: '22'

            - name: Get Node version
              id: node-version
              run: echo "node-version=$(node --version | sed 's/^v//')" >> $GITHUB_OUTPUT

            - name: Install dependencies
              run: bun install

            - name: Install bombardier
              run: |
                  wget https://github.com/codesenberg/bombardier/releases/download/v2.0.2/bombardier-linux-amd64
                  chmod +x bombardier-linux-amd64
                  sudo mv bombardier-linux-amd64 /usr/local/bin/bombardier

            - name: Run all benchmarks
              run: |
                  TIME="${{ inputs.time || '10' }}"
                  CONNECTIONS="${{ inputs.connections || '128' }}"
                  RUNS="${{ inputs.runs || '1' }}"
                  echo "Configuration: ${TIME}s duration, ${CONNECTIONS} connections, ${RUNS} runs"
                  bun run bench.ts --time=$TIME --connections=$CONNECTIONS --runs=$RUNS
              env:
                  NODE_ENV: production
                  BUN_VERSION: ${{ steps.bun-version.outputs.bun-version }}
                  DENO_VERSION: ${{ steps.deno-version.outputs.deno-version }}
                  NODE_VERSION: ${{ steps.node-version.outputs.node-version }}

            - name: Upload results
              uses: actions/upload-artifact@v4
              with:
                  name: benchmark-results
                  path: results/
                  retention-days: 90
              if: always()

            - name: Display results
              run: |
                  if [ -f results/results.md ] && [ -s results/results.md ]; then
                    echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
                    cat results/results.md >> $GITHUB_STEP_SUMMARY
                  else
                    echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
                    echo "⚠️ No results found or results file is empty" >> $GITHUB_STEP_SUMMARY
                  fi
              if: always()

            - name: Append results to README
              run: bun scripts/append-results-to-readme.ts
              if: success()

            - name: Commit and push results
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git add README.md
                  if git diff --cached --quiet; then
                    echo "No changes to commit"
                  else
                    git commit -m "Update benchmark results - $(date +%Y-%m-%d)"
                    git push
                  fi
              if: success()
